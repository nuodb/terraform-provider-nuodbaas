/*
NuoDB Control Plane REST API

Testing ClusterHelmfeaturesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package nuodbaas

import (
	"context"
	"testing"

	nuodbaas "github.com/nuodb/nuodbaas-tf-plugin/generated_client"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_nuodbaas_ClusterHelmfeaturesAPIService(t *testing.T) {

	configuration := nuodbaas.NewConfiguration()
	apiClient := nuodbaas.NewAPIClient(configuration)

	t.Run("Test ClusterHelmfeaturesAPIService CreateHelmFeature", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string

		httpRes, err := apiClient.ClusterHelmfeaturesAPI.CreateHelmFeature(context.Background(), name).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ClusterHelmfeaturesAPIService DeleteHelmFeature", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string

		httpRes, err := apiClient.ClusterHelmfeaturesAPI.DeleteHelmFeature(context.Background(), name).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ClusterHelmfeaturesAPIService GetHelmFeature", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string

		resp, httpRes, err := apiClient.ClusterHelmfeaturesAPI.GetHelmFeature(context.Background(), name).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ClusterHelmfeaturesAPIService GetHelmFeatures", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ClusterHelmfeaturesAPI.GetHelmFeatures(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ClusterHelmfeaturesAPIService PatchHelmFeature", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string

		httpRes, err := apiClient.ClusterHelmfeaturesAPI.PatchHelmFeature(context.Background(), name).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
