// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
