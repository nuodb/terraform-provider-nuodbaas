// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"3f8PAAD//0QWfeYDuwEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
