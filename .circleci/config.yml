version: 2.1

executors:
  go:
    # Check https://circleci.com/developer/images/image/cimg/go for more details
    docker:
      - image: cimg/go:1.22.0
    resource_class: small

  ubuntu_vm:
    machine:
      image: ubuntu-2204:2023.10.1
    resource_class: medium

jobs:
  functional_tests:
    parameters:
      test-driver:
        description: |
          The test driver to use.
        type: string
      nuodb-cp-version:
        description: |
          The version of the NuoDB Control Plane to test against.
        type: string
        default: 2.4.1
    executor: ubuntu_vm
    environment:
      TEST_RESULTS: /tmp/test-results
      OUTPUT_DIR: /tmp/test-artifacts
      NUODB_CP_VERSION: << parameters.nuodb-cp-version >>
    steps:
      - checkout
      - run:
          name: "Setup environment"
          command: |
            echo "Setting up << parameters.test-driver >> with NuoDB CP << parameters.nuodb-cp-version >>..."
            make setup-<< parameters.test-driver >>
            make env-<< parameters.test-driver >> >> "$BASH_ENV"
      - run:
          name: "Run tests"
          command: |
            make testacc
      - run:
          name: "Generate coverage report"
          command: |
            make coverage-report
      - run:
          name: "Collect logging"
          command: |
            make logs-<< parameters.test-driver >>
          when: always
      - store_artifacts:
          name: "Upload test artifacts"
          path: /tmp/test-artifacts
          destination: test-artifacts
      - store_test_results:
          name: "Upload test results"
          path: /tmp/test-results

  check_quality:
    executor: go
    steps:
      - checkout
      - run:
          name: "Generate OpenAPI client and Terraform provider documentation"
          command: make generate
      - run:
          name: "Check that there are no generated changes"
          command: make check-no-changes
      - run:
          name: "Run code linters"
          command: make lint

  deploy_test:
    executor: ubuntu_vm
    steps:
     - checkout
     - run:
        name: "Run end to end deployment test"
        command: |
          # CircleCI does not like setting variables from variables in the environment section
          export NUODB_CP_USER=$DBAAS_TEST_USER
          export NUODB_CP_PASSWORD=$DBAAS_TEST_PASSWORD
          export NUODB_CP_URL_BASE=$DBAAS_API_ENDPOINT
          test/app/run.sh

workflows:
  test:
    jobs:
      - functional_tests:
          name: Functional tests (KWOK)
          test-driver: kwok
      - functional_tests:
          name: Functional tests (Minikube)
          test-driver: minikube
      - functional_tests:
          name: Functional tests (External DBaaS)
          test-driver: external
      - check_quality:
          name: Static code checks
      - deploy_test:
          name: End-to-end deployment test
